summary(glm_nb)
par(mfrow = c(2, 1))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(2, 2))
plot(glm_nb)
par(mfrow = c(2, 2))
plot(glm_poi)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
check_overdispersion(glm_poi)
library(glarma)
library(kableExtra)
library(performance)
library(MASS)
check_overdispersion(glm_nb)
install.packages("DHARMa")
check_overdispersion(glm_nb)
check_zeroinflation(glm_nb)
library(glarma)
library(kableExtra)
library(performance)
library(MASS)
df <- read.table("Data_CPDO.txt")
df %>%
kbl() %>%
kable_material(c("striped", "hover"))
round(df, 3)
df <- round(df, 3)
df <- read.table("Data_CPDO.txt")
df %>%
kbl() %>%
kable_material(c("striped", "hover"))
df <- read.table("Data_CPDO.txt")
df <- round(df, 3)
df %>%
kbl() %>%
kable_material(c("striped", "hover"))
df <- read.table("Data_CPDO.txt")
df %>%
round(df, 3) %>%
kbl() %>%
kable_material(c("striped", "hover"))
df %>%
round(, 3) %>%
kbl() %>%
kable_material(c("striped", "hover"))
df <- read.table("Data_CPDO.txt")
df %>%
kbl() %>%
kable_material(c("striped", "hover"))
tabela <- round(df, 3)
tabela %>%
kbl() %>%
kable_material(c("striped", "hover"))
y <- df[, 1] #bronq_aguda
X <- as.matrix(df[, 2:13]) #poluentes e outros fatores de comparação
glm_poi <- glm(y ~ X, family = poisson(link = "log"))
summary(glm_poi)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
par(mfrow = c(2, 2))
plot(glm_poi)
check_overdispersion(glm_poi)
check_zeroinflation(glm_poi)
glm_nb <- glm.nb(y ~ X)
summary(glm_nb)
par(mfrow = c(2, 1))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
glm_nb <- glm.nb(y ~ X)
summary(glm_nb)
glm_poi <- glm(y ~ X, family = poisson(link = "log"))
summary(glm_poi)
par(mfrow = c(2, 2))
plot(glm_nb)
check_overdispersion(glm_nb)
check_zeroinflation(glm_nb)
poluentes <- df[, 1:9]
matrix <-  rcorr(as.matrix(poluentes))
plot(poluentes)
plot(poluentes)
poluentes <- df[, 1:9]
matrix <-  rcorr(as.matrix(poluentes))
require(glarma)
require(kableExtra)
require(tidyverse)
require(Hmisc)
poluentes <- df[, 1:9]
matrix <-  rcorr(as.matrix(poluentes))
cor_matrix <- matrix$r
p_value_matrix <- matrix$P
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- ""
p_value_matrix[lower.tri(p_value_matrix, diag = TRUE)] <- ""
cor_matrix %>%
kable("html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
round(cor_matrix, 3) %>%
kable("html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
y <- df[,1]
X1 <- as.matrix(df[,4])
Trend <- 1:84
Intercepto <- rep(1,84)
X1 <- cbind(Intercepto, Trend, X1, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X1) <- c("Intercepto", "Trend", "NO", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X1, thetaLags = NULL, phiLags = 1, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
par(mfrow = c(2, 1))
acf(glarma_nb$residuals)
pacf(glarma_nb$residuals)
par(mfrow=c(2,3))
plot(glarma_nb)
y <- df[,1]
X2 <- as.matrix(df[,6])
Trend <- 1:84
Intercepto <- rep(1,84)
X2 <- cbind(Intercepto, Trend, X2, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X2) <- c("Intercepto", "Trend", "NOX", "cos6", "cos12", "sen6", "sen12")
poluentes <- df[, 1:9]
matrix <-  rcorr(as.matrix(poluentes))
cor_matrix <- matrix$r
p_value_matrix <- matrix$P
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- ""
p_value_matrix[lower.tri(p_value_matrix, diag = TRUE)] <- ""
p_value_matrix %>%
kable("html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
y <- df[,1]
X1 <- as.matrix(df[,4])
Trend <- 1:84
Intercepto <- rep(1,84)
X1 <- cbind(Intercepto, Trend, X1, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X1) <- c("Intercepto", "Trend", "NO", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X1, thetaLags = NULL, phiLags = 1, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
y <- df[,1]
X2 <- as.matrix(df[,6])
Trend <- 1:84
Intercepto <- rep(1,84)
X2 <- cbind(Intercepto, Trend, X2, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X2) <- c("Intercepto", "Trend", "NOX", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X2, thetaLags = NULL, phiLags = 1, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
y <- df[,1]
X1 <- as.matrix(df[,4])
X2 <- as.matrix(df[,6])
Trend <- 1:84
Intercepto <- rep(1,84)
X3 <- cbind(Intercepto, Trend, X1, X2, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X3) <- c("Intercepto", "Trend", "NO", "NOX", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X3, thetaLags = NULL, phiLags = c(3,12), type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
df <- read.delim("Data_CPDO.txt")
poluentes <- cbind(df[, 2:5], df[, 7])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
library(corrr)
library(ggcorrplot)
library(FactoMineR)
library(factoextra)
library(glarma)
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
pca_result <- prcomp(poluentes, center = TRUE, scale. = TRUE)
# Selecionar os primeiros componentes principais (com base em variância explicada, por exemplo)
variancia_explicada <- summary(pca_result)$importance[2, ]  # Proporção da variância explicada
num_componentes <- which(cumsum(variancia_explicada) >= 0.8)[1]  # 80% da variância explicada
pca_vars <- pca_result$x[, 1:num_componentes]  # Seleciona os componentes principais
pca_vars
Trend <- 1:84
df_pca <- as.matrix(cbind(pca_vars, df[,8:13], Trend))
y <- df[, 1]
glarma_poi <- glarma(y, df_pca, thetaLags = NULL, phiLags = c(6,7), type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi)
glarma_nb <- glarma(y, df_pca, thetaLags = 1, phiLags = NULL, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
View(poluentes)
View(df)
poluentes <- cbind(df[, 2:7])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
poluentes <- cbind(df[, 2:8])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
df <- read.delim("Data_CPDO.txt")
poluentes <- cbind(df[, 2:7])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
pca_result <- prcomp(poluentes, center = TRUE, scale. = TRUE)
# Selecionar os primeiros componentes principais (com base em variância explicada, por exemplo)
variancia_explicada <- summary(pca_result)$importance[2, ]  # Proporção da variância explicada
num_componentes <- which(cumsum(variancia_explicada) >= 0.8)[1]  # 80% da variância explicada
pca_vars <- pca_result$x[, 1:num_componentes]  # Seleciona os componentes principais
pca_vars
Trend <- 1:84
df_pca <- as.matrix(cbind(pca_vars, df[,8:13], Trend))
y <- df[, 1]
glarma_poi <- glarma(y, df_pca, thetaLags = NULL, phiLags = c(6,7), type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi)
glarma_nb <- glarma(y, df_pca, thetaLags = 1, phiLags = NULL, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
glarma_nb <- glarma(y, df_pca, thetaLags = NULL, phiLags = c(3,6), type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
glarma_nb <- glarma(y, df_pca, thetaLags = NULL, phiLags = 6, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
pacf(glarma_nb$residuals)
acf(glarma_nb$residuals)
par(mfrow=c(2,3))
plot(glarma_nb)
pacf(glarma_poi$residuals)
acf(glarma_poi$residuals)
glarma_nb <- glarma(y, df_pca, thetaLags = NULL, phiLags = 6, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
par(mfrow=c(2,3))
plot(glarma_nb)
glm_poi <- glm(y ~ X, family = poisson(link = "log"))
summary(glm_poi)
summary(glarma_poi)
plot(glarma_poi)
plot(glm_poi)
acf(glm_poi)
acf(glm_poi)
acf(glm_poi)
acf(glm_poi$residuals)
acf(glm_nb$residuals)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
acf(glm_nb$residuals)
par(mfrow = c(1, 2))
acf(glm_poi$residuals)
acf(glm_nb$residuals)
par(mfrow = c(1, 2))
acf(glm_poi$residuals)
acf(glm_nb$residuals)
pacf(glm_poi$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(1, 2))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
par(mfrow = c(1, 2))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
plot(glm_poi$residuals)
plot(glm_poi$residuals)
plot(glarma_poi)
plot(glm_nb)
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(1, 2))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(1, 2))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
cor_matrix %>%
kable("html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
cor_matrix %>%
kableExtra::kbl()
cor_matrix %>%
kbl()
cor_matrix %>%
kbl()
tabela_1 <- round(cor_matrix, 2)
tabela_1 %>%
kbl()
tabela_1 <- round(cor_matrix, 2)
tabela_1 %>%
kbl()
tabela_1 <- round(cor_matrix, 2)
tabela_1 <- round(cor_matrix, 2)
tabela_1 <- round(cor_matrix, 2)
round(cor_matrix)
cor_matrix
tabela_1 <- as.numeric(cor_matrix)
tabela_1 <- as.numeric(cor_matrix)
tabela_1 <- round(tabela_1, 2)
tabela_1 %>%
kbl()
cor_matrix %>%
kable("html", align = "c") %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
cor_matrix %>%
kbl() %>%
kable_classic_2(full_width = F)
cor_matrix %>%
kbl() %>%
kable_classic_2(full_width = F)
cor_matrix %>%
kbl() %>%
kable_classic(full_width = F)
matrix$r
as.numeric(matrix$r)
(matrix$r)
cor_matrix[upper.tri(cor_matrix), diag = TRUE] <- as.numeric()
as.numeric(cor_matrix)
mode(cor_matrix) <- "numeric"
cor_matrix
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- ""
cor_matrix
cor_matrix <- matrix$r
cor_matrix
round(cor_matrix, 2)
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- ""
cor_matrix
cor_matrix <- matrix$r
cor_matrix <- round(cor_matrix, 2)
cor_matrix[lower.tri(cor_matrix, diag = TRUE)] <- ""
cor_matrix
cor_matrix %>%
kbl() %>%
kable_classic(full_width = F)
cor_matrix %>%
kbl() %>%
kable_paper(bootstrap_options = "striped", full_width = F)
cor_matrix %>%
kbl() %>%
kable_classic(full_width = F)
plot(glarma_nb)
qqplot(glarma_nb$residuals)
qqplot(glarma_nb)
plot(glarma_nb)
plot(glarma_nb, 5)
plot(glarma_nb, 4)
df <- read.delim("Data_CPDO.txt")
poluentes <- cbind(df[, 2:7])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
pca_result <- prcomp(poluentes, center = TRUE, scale. = TRUE)
# Selecionar os primeiros componentes principais (com base em variância explicada, por exemplo)
variancia_explicada <- summary(pca_result)$importance[2, ]  # Proporção da variância explicada
num_componentes <- which(cumsum(variancia_explicada) >= 0.8)[1]  # 80% da variância explicada
pca_vars <- pca_result$x[, 1:num_componentes]  # Seleciona os componentes principais
pca_vars
Trend <- 1:84
df_pca <- as.matrix(cbind(pca_vars, df[,8:13], Trend))
y <- df[, 1]
glarma_poi <- glarma(y, df_pca, thetaLags = NULL, phiLags = c(6,7), type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(2,1))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(2,3))
plot(glarma_nb)
par(mfrow=c(2,3))
plot(glarma_nb)
pacf(glarma_nb$residuals)
acf(glarma_nb$residuals)
?acf
par(mfrow=c(1,2))
plot(glm_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
plot(glm_poi, 5, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 5, titles = "Q-Q Plot Modelo Binomial Negativo")
plot(glm_poi)
par(mfrow=c(2,3))
plot(glm_poi)
plot(glm_poi, 2, titles = "Q-Q Plot Modelo Poisson")
par(mfrow=c(1,2))
plot(glm_poi, 2, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 2, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(2,3))
plot(glm_poi)
df <- read.table("Data_CPDO.txt")
tabela <- round(df, 3)
tabela %>%
kbl() %>%
kable_material(c("striped", "hover"))
y <- df[, 1] #bronq_aguda
X <- as.matrix(df[, 2:13]) #poluentes e outros fatores de comparação
glm_poi <- glm(y ~ X, family = poisson(link = "log"))
summary(glm_poi)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
par(mfrow = c(2, 2))
plot(glm_poi)
glm_nb <- glm.nb(y ~ X)
summary(glm_nb)
par(mfrow = c(2, 1))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(2, 2))
plot(glm_nb)
par(mfrow = c(2, 2))
plot(glm_poi)
check_overdispersion(glm_poi)
y <- df[,1]
X1 <- as.matrix(df[,4])
X2 <- as.matrix(df[,6])
Trend <- 1:84
Intercepto <- rep(1,84)
X3 <- cbind(Intercepto, Trend, X1, X2, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X3) <- c("Intercepto", "Trend", "NO", "NOX", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X3, thetaLags = NULL, phiLags = c(3,12), type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
EPA <- var_c1/var_aasc
dados <- data.frame(
Filial = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
B_alpha = c(6, 2, 11, 7, 8, 14, 6, 2, 2, 5, 12, 6),
mu_alpha = c(24.32, 27.06, 27.60, 28.01, 27.56, 29.07,
32.03, 28.41, 28.91, 25.55, 28.58, 27.27),
sigma2_alpha = c(5.07, 5.53, 6.24, 6.59, 6.21, 6.12, 5.97,
6.01, 5.74, 6.78, 5.87, 5.38)
)
N <- sum(dados$B_alpha)
A <- 12
a <- 4
kable(dados)
library(kableExtra)
dados <- data.frame(
Filial = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
B_alpha = c(6, 2, 11, 7, 8, 14, 6, 2, 2, 5, 12, 6),
mu_alpha = c(24.32, 27.06, 27.60, 28.01, 27.56, 29.07,
32.03, 28.41, 28.91, 25.55, 28.58, 27.27),
sigma2_alpha = c(5.07, 5.53, 6.24, 6.59, 6.21, 6.12, 5.97,
6.01, 5.74, 6.78, 5.87, 5.38)
)
N <- sum(dados$B_alpha)
A <- 12
a <- 4
kable(dados)
set.seed(2005)
amostra1 <- dados[sample(nrow(dados), 4, replace = TRUE), ]
kable(amostra1, caption = 'AMOSTRA')
N <- sum(dados$B_alpha)
A <- 12
a <- 4
B_barra <- N/A
T_barra <- sum(amostra1$mu_alpha * amostra1$B_alpha) / a
Y_c1 <- T_barra / B_barra
Y_c1
mu <- (1/A)*sum(dados$B_alpha * dados$mu_alpha / B_barra)
sigma2_ect <- (sum((((dados$B_alpha*dados$mu_alpha)/B_barra) - mu)^2)) / A
var_c1 <- sigma2_ect / a
var_c1
var_c1_chapeu <- (sum((((dados$B_alpha*dados$mu_alpha)/B_barra) - Y_c1)^2)) / (a^2*(a-1))
var_c1_chapeu
sigma2_dc <- sum(dados$sigma2_alpha * dados$B_alpha/ B_barra )/A
sigma2_ec <- sum((dados$B_alpha/B_barra)*((dados$mu_alpha - mu)^2))/A
sigma2_dc
sigma2_ec
sigma2 <- sigma2_dc + sigma2_ec
sigma2
var_aasc <- sigma2/27
var_aasc
EPA <- var_c1/var_aasc
EPA
sigma2_dc <- sum(dados$sigma2_alpha * dados$B_alpha/ B_barra )/A
sigma2_ec <- sum((dados$B_alpha/B_barra)*((dados$mu_alpha - mu)^2))/A
sigma2_dc
sigma2_ec
sigma2 <- sigma2_dc + sigma2_ec
sigma2
var_aasc <- sigma2/27
var_aasc
EPA <- var_c1/var_aasc
EPA
