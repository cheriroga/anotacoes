kable_classic(full_width = F)
plot(glarma_nb)
qqplot(glarma_nb$residuals)
qqplot(glarma_nb)
plot(glarma_nb)
plot(glarma_nb, 5)
plot(glarma_nb, 4)
df <- read.delim("Data_CPDO.txt")
poluentes <- cbind(df[, 2:7])
corr_matrix <- cor(as.matrix(poluentes))
ggcorrplot(corr_matrix)
pca_result <- prcomp(poluentes, center = TRUE, scale. = TRUE)
# Selecionar os primeiros componentes principais (com base em variância explicada, por exemplo)
variancia_explicada <- summary(pca_result)$importance[2, ]  # Proporção da variância explicada
num_componentes <- which(cumsum(variancia_explicada) >= 0.8)[1]  # 80% da variância explicada
pca_vars <- pca_result$x[, 1:num_componentes]  # Seleciona os componentes principais
pca_vars
Trend <- 1:84
df_pca <- as.matrix(cbind(pca_vars, df[,8:13], Trend))
y <- df[, 1]
glarma_poi <- glarma(y, df_pca, thetaLags = NULL, phiLags = c(6,7), type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi)
par(mfrow=c(2,3))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(2,1))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4)
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4)
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(1,2))
plot(glarma_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glarma_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(2,3))
plot(glarma_nb)
par(mfrow=c(2,3))
plot(glarma_nb)
pacf(glarma_nb$residuals)
acf(glarma_nb$residuals)
?acf
par(mfrow=c(1,2))
plot(glm_poi, 4, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 4, titles = "Q-Q Plot Modelo Binomial Negativo")
plot(glm_poi, 5, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 5, titles = "Q-Q Plot Modelo Binomial Negativo")
plot(glm_poi)
par(mfrow=c(2,3))
plot(glm_poi)
plot(glm_poi, 2, titles = "Q-Q Plot Modelo Poisson")
par(mfrow=c(1,2))
plot(glm_poi, 2, titles = "Q-Q Plot Modelo Poisson")
plot(glm_nb, 2, titles = "Q-Q Plot Modelo Binomial Negativo")
par(mfrow=c(2,3))
plot(glm_poi)
df <- read.table("Data_CPDO.txt")
tabela <- round(df, 3)
tabela %>%
kbl() %>%
kable_material(c("striped", "hover"))
y <- df[, 1] #bronq_aguda
X <- as.matrix(df[, 2:13]) #poluentes e outros fatores de comparação
glm_poi <- glm(y ~ X, family = poisson(link = "log"))
summary(glm_poi)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
par(mfrow = c(2, 1))
acf(glm_poi$residuals)
pacf(glm_poi$residuals)
par(mfrow = c(2, 2))
plot(glm_poi)
glm_nb <- glm.nb(y ~ X)
summary(glm_nb)
par(mfrow = c(2, 1))
acf(glm_nb$residuals)
pacf(glm_nb$residuals)
par(mfrow = c(2, 2))
plot(glm_nb)
par(mfrow = c(2, 2))
plot(glm_poi)
check_overdispersion(glm_poi)
y <- df[,1]
X1 <- as.matrix(df[,4])
X2 <- as.matrix(df[,6])
Trend <- 1:84
Intercepto <- rep(1,84)
X3 <- cbind(Intercepto, Trend, X1, X2, df$cos6, df$cos12, df$sen6, df$sen12)
colnames(X3) <- c("Intercepto", "Trend", "NO", "NOX", "cos6", "cos12", "sen6", "sen12")
glarma_nb <- glarma(y, X3, thetaLags = NULL, phiLags = c(3,12), type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
EPA <- var_c1/var_aasc
dados <- data.frame(
Filial = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
B_alpha = c(6, 2, 11, 7, 8, 14, 6, 2, 2, 5, 12, 6),
mu_alpha = c(24.32, 27.06, 27.60, 28.01, 27.56, 29.07,
32.03, 28.41, 28.91, 25.55, 28.58, 27.27),
sigma2_alpha = c(5.07, 5.53, 6.24, 6.59, 6.21, 6.12, 5.97,
6.01, 5.74, 6.78, 5.87, 5.38)
)
N <- sum(dados$B_alpha)
A <- 12
a <- 4
kable(dados)
library(kableExtra)
dados <- data.frame(
Filial = c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12),
B_alpha = c(6, 2, 11, 7, 8, 14, 6, 2, 2, 5, 12, 6),
mu_alpha = c(24.32, 27.06, 27.60, 28.01, 27.56, 29.07,
32.03, 28.41, 28.91, 25.55, 28.58, 27.27),
sigma2_alpha = c(5.07, 5.53, 6.24, 6.59, 6.21, 6.12, 5.97,
6.01, 5.74, 6.78, 5.87, 5.38)
)
N <- sum(dados$B_alpha)
A <- 12
a <- 4
kable(dados)
set.seed(2005)
amostra1 <- dados[sample(nrow(dados), 4, replace = TRUE), ]
kable(amostra1, caption = 'AMOSTRA')
N <- sum(dados$B_alpha)
A <- 12
a <- 4
B_barra <- N/A
T_barra <- sum(amostra1$mu_alpha * amostra1$B_alpha) / a
Y_c1 <- T_barra / B_barra
Y_c1
mu <- (1/A)*sum(dados$B_alpha * dados$mu_alpha / B_barra)
sigma2_ect <- (sum((((dados$B_alpha*dados$mu_alpha)/B_barra) - mu)^2)) / A
var_c1 <- sigma2_ect / a
var_c1
var_c1_chapeu <- (sum((((dados$B_alpha*dados$mu_alpha)/B_barra) - Y_c1)^2)) / (a^2*(a-1))
var_c1_chapeu
sigma2_dc <- sum(dados$sigma2_alpha * dados$B_alpha/ B_barra )/A
sigma2_ec <- sum((dados$B_alpha/B_barra)*((dados$mu_alpha - mu)^2))/A
sigma2_dc
sigma2_ec
sigma2 <- sigma2_dc + sigma2_ec
sigma2
var_aasc <- sigma2/27
var_aasc
EPA <- var_c1/var_aasc
EPA
sigma2_dc <- sum(dados$sigma2_alpha * dados$B_alpha/ B_barra )/A
sigma2_ec <- sum((dados$B_alpha/B_barra)*((dados$mu_alpha - mu)^2))/A
sigma2_dc
sigma2_ec
sigma2 <- sigma2_dc + sigma2_ec
sigma2
var_aasc <- sigma2/27
var_aasc
EPA <- var_c1/var_aasc
EPA
library(glarma)
library(kableExtra)
library(performance)
library(MASS)
data(Polio)
library(garma)
library(kableExtra)
library(performance)
library(MASS)
install.packages("garma")
library(garma)
library(garma)
library(kableExtra)
library(performance)
library(MASS)
data(Polio)
Polio$Cases
Polio$Cases
install.packages("AirPassengers")
Polio$Cases
install.packages("Rtools")
Polio$Cases
data("AirPassengers")
AirPassengers
AirPassengers
as.numeric(AirPassengers)
Polio$Cases
as.numeric(diff(AirPassengers))
as.numeric(diff(AirPassengers, 12))
?diff
diff(Polio$Cases)
diff(Polio$Cases, 12)
diff(Polio$Cases, 12)
data(Polio)
ts(data = Polio$Cases)
?Polio
diff(Polio$Cases, 12)
ts_polio <- ts(Polio$Cases, start = c(1970, 1), frequency = 12)
ts_polio <- ts(Polio$Cases, start = c(1970, 0), frequency = 12)
ts_polio <- ts(Polio$Cases, start = c(1970, 0), frequency = 12)
ts_polio <- ts(Polio$Cases, start = c(1970, 1), frequency = 12)
plot(ts_polio, main = "Casos mensais de Poliomielite", ylab = "Número de casos")
garma_poi <- garma(y = Polio$Cases, order = c(1, 1), link = "log", family = "poisson")
garma_poi <- garma(y = Polio$Cases, order = c(1, 1), link = "log", family = "poisson")
garma_poi <- garma(x = Polio$Cases, order = c(1, 1), link = "log", family = "poisson")
modelo_polio <- garma(x = y, order = c(1, 1), K = 0, method = "Poisson")
modelo_polio <- garma(x = ts_polio, order = c(1, 1), K = 0, method = "Poisson")
modelo_polio <- garma(x = ts_polio, order = c(1, 1), K = 0, method = "Poisson")
?garma
modelo_polio <- garma(x = ts_polio, order = c(9,1,0), k = 0, method = "CSS", include.mean = FALSE)
View(modelo_polio)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(0,1,0), k = 0, method = "CSS", include.mean = FALSE)
modelo_polio <- garma(x = ts_polio, order = c(0,1,0), k = 1, method = "CSS", include.mean = FALSE)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(0,1,0), k = 1, method = "CSS", include.mean = TRUE)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(0,1,0), k = 1, method = "CSS", include.mean = TRUE)
modelo_polio <- garma(x = ts_polio, order = c(0,1,0), k = 1, method = "CSS", include.mean = FALSE)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(1,0,1), k = 1, method = "CSS", include.mean = FALSE)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(1,0,1), k = 0, method = "CSS", include.mean = FALSE)
summary(modelo_polio)
print(arima(ap, order = c(1,0,1), include.mean = FALSE))
print(arima(ts_polio, order = c(1,0,1), include.mean = FALSE))
modelo_polio <- garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE)
print(arima(ts_polio, order = c(1,0,1), include.mean = FALSE))
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(9,0,1), k = 0, method = "Whittle", include.mean = FALSE)
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(9,0,1), k = 0, method = "Whittle", include.mean = FALSE)
ts_polio <- ts(Polio$Cases, start = c(1970, 1), frequency = 12)
plot(ts_polio, main = "Casos mensais de Poliomielite", ylab = "Número de casos")
modelo_polio <- garma(x = ts_polio, order = c(9,0,1), k = 0, method = "Whittle", include.mean = FALSE)
library(garma)
library(garma)
library(glarma)
library(kableExtra)
library(performance)
library(MASS)
data(Polio)
diff(Polio$Cases, 12)
data(Polio)
ts_polio <- ts(Polio$Cases, start = c(1970, 1), frequency = 12)
plot(ts_polio, main = "Casos mensais de Poliomielite", ylab = "Número de casos")
modelo_polio <- garma(x = ts_polio, order = c(9,0,1), k = 0, method = "Whittle", include.mean = FALSE)
print(arima(ts_polio, order = c(1,0,1), include.mean = FALSE))
summary(modelo_polio)
modelo_polio <- garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE)
print(arima(ts_polio, order = c(1,0,1), include.mean = FALSE))
modelo_polio <- garma(x = ts_polio, order = c(1,0,1), k = 0, method = "CSS", include.mean = FALSE)
print(arima(ts_polio, order = c(1,0,1), include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "CSS", include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "CSS", include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "WLL", include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,0,0), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(2,0,2), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(2,1,2), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(0,3,2), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,3,2), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(2,3,2), k = 0, method = "Whittle", include.mean = FALSE))
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE))
data(Polio)
View(Polio)
?Polio
View(Polio)
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE))
library(garma)
library(glarma)
library(kableExtra)
library(performance)
library(MASS)
print(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE))
summary(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE))
summary(garma(x = ts_polio, order = c(1,0,1), k = 0, method = "Whittle", include.mean = FALSE))
?garma
install.packages("gamlss")
library(gamlss)
install.packages("gamlss.utils")
install.packages("utils")
?gamlss
y <- Polio[, 2]
X <- as.matrix(Polio[, 3:8])
gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 1, q = 1))
View(X)
Polio
glarma_poi <- glarma(y, X, thetaLags = c(1,2), phiLags = 5, type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_poi)
?gamlss
gamlss(y ~ X, family = NBF, mu.fo = ~ garma(p = 1, q = 1))
gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 1, q = 1))
glarma_nb <- glarma(y, X, thetaLags = c(1,2), phiLags = 4, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
summary(glarma_nb)
gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 1, q = 1))
gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = 1))
gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = c(1,2)))
gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = c(1,2)))
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = c(1,2)))
summary(garma_poi)
plot(garma_poi$residuals)
plot(garma_poi)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 1, q = 1))
summary(garma_poi)
plot(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = 1))
summary(garma_poi)
plot(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 4, q = c(1,2)))
summary(garma_poi)
plot(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
library(glarma)
library(MASS)
glarma_poi <- glarma(y, X, thetaLags = c(1,2), phiLags = 5, type = "Poi",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
par(mfrow = c(2, 1))
acf(glarma_poi$residuals)
pacf(glarma_poi$residuals)
par(mfrow = c(2, 1))
acf(glarma_poi$residuals)
pacf(glarma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = c(1,2)))
plot(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 3))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 3, q = 3))
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 1, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 2, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 0))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
summary(garma_poi)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 6, q = 0))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 0))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
glarma_nb <- glarma(y, X, thetaLags = c(1,2), phiLags = 4, type = "NegBin",
method = "FS", residuals= "Pearson",
maxit = 100, grad = 1e-6)
par(mfrow = c(2, 1))
acf(glarma_nb$residuals)
pacf(glarma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 5, q = 1))
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 5, q = 1))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 5, q = c(1,2)))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 4, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 1, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 2, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 2, q = 4))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = c(1,2), q = ))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = c(1,2), q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = c(1,2), q = 1))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = c(1,2), q = 2))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = c(1,2), q = 3))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 1, q = 3))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 1, q = ))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 2, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_nb <- gamlss(y ~ X, family = NBII, mu.fo = ~ garma(p = 5, q = 1))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_nb$residuals)
pacf(garma_nb$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
plot(garma_poi)
plot(garma_nb)
library(gamlss)
library(MASS)
data(Polio)
y <- Polio[, 2]
X <- as.matrix(Polio[, 3:8])
data(Polio)
y <- Polio[, 2]
X <- as.matrix(Polio[, 3:8])
library(gamlss)
library(MASS)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
summary(garma_poi)
garma_poi <- gamlss(y ~ X, family = PO, mu.fo = ~ garma(p = 3, q = 0))
summary(garma_poi)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
par(mfrow = c(2, 1))
acf(garma_poi$residuals)
pacf(garma_poi$residuals)
